#ifndef CLIENT_H
#define CLIENT_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>

// tudo que tem a ver com internet
#include <netinet/in.h>
#include <netdb.h> // sistema DNS
#include "message.h"

#include <bits/stdc++.h>

using namespace std;

// struct that represents a active client
typedef struct CLIENT {
    int socketDescriptor; // socket descriptor
    struct sockaddr_in address; // address of the server
    struct hostent *hp; // host information
    char *host; // host name
} Client; 

// used to create a client
Client* clientConstructor(char* svName, char* port);

// used to destroy a client
void clientDestructor(Client* client);

// used to send a message to the server via a given client
void sendToServer(Client* client, Message* msg);

// main function executed by the manager of the children 
void parentMain(vector<int> pids, FILE* output);

// main function executed by the children
void childMain(int balls, char* server, char* port);

// used to send information about the communication to the server
void handshake(
    char* server, 
    char* port, 
    char* clients, 
    char* cannonbals,
    FILE* output
);

#endif